---
- name: Ensure Docker is installed
  package:
    name: docker.io
    state: present
  become: yes

- name: Ensure Docker Compose is installed
  package:
    name: docker-compose
    state: present
  become: yes

- name: Ensure deployment directory exists
  file:
    path: "{{ deploy_dir }}"
    state: directory
    mode: '0755'
  become: yes
  become_user: jenkins

- name: Copy Docker Compose file
  template:
    src: docker-compose.j2
    dest: "{{ deploy_dir }}/docker-compose.yml"
    mode: '0644'
  become: yes
  become_user: jenkins

- name: Copy MySQL init script
  template:
    src: init.sql.j2
    dest: "{{ deploy_dir }}/init.sql"
    mode: '0644'
  become: yes
  become_user: jenkins

- name: Copy Logstash configuration
  template:
    src: logstash.conf.j2
    dest: "{{ deploy_dir }}/logstash.conf"
    mode: '0644'
  become: yes
  become_user: jenkins

- name: Stop existing Docker Compose services
  command: docker-compose -f {{ deploy_dir }}/docker-compose.yml down
  args:
    chdir: "{{ deploy_dir }}"
  become: yes
  become_user: jenkins
  ignore_errors: yes

- name: Start Docker Compose services
  command: docker-compose -f {{ deploy_dir }}/docker-compose.yml up -d
  args:
    chdir: "{{ deploy_dir }}"
  become: yes
  become_user: jenkins