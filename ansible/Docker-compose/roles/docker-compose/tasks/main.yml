---
- name: Ensure Docker is installed
  ansible.builtin.package:
    name: docker.io
    state: present
  become: yes

- name: Ensure Docker Compose is installed
  ansible.builtin.get_url:
    url: https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: '0755'
    checksum: sha256:{{ docker_compose_checksum }}
  become: yes

- name: Create Docker Compose project directory
  ansible.builtin.file:
    path: "{{ compose_project_dir }}"
    state: directory
    mode: '0755'
  become: yes
  become_user: jenkins

- name: Copy Docker Compose configuration
  ansible.builtin.template:
    src: docker-compose.j2
    dest: "{{ compose_project_dir }}/docker-compose.yml"
    mode: '0644'
  become: yes
  become_user: jenkins

- name: Copy MySQL initialization script
  ansible.builtin.template:
    src: initsql.j2
    dest: "{{ compose_project_dir }}/init.sql"
    mode: '0644'
  become: yes
  become_user: jenkins

- name: Copy Logstash configuration
  ansible.builtin.template:
    src: logstash.conf.j2
    dest: "{{ compose_project_dir }}/logstash.conf"
    mode: '0644'
  become: yes
  become_user: jenkins

- name: Ensure Docker service is running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes
  become: yes

- name: Run Docker Compose
  ansible.builtin.command:
    cmd: docker-compose -f {{ compose_project_dir }}/docker-compose.yml up -d
    chdir: "{{ compose_project_dir }}"
  become: yes
  become_user: jenkins
  register: compose_result
  changed_when: compose_result.rc == 0